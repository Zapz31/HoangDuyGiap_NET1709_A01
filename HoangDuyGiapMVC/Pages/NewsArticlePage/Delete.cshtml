@page
@model HoangDuyGiapMVC.Pages.NewsArticlePage.DeleteModel

@{
    ViewData["Title"] = "Delete";
    ViewData["Title"] = "Create";
    string? email = HttpContext.Session.GetString("Email");
    int? role = HttpContext.Session.GetInt32("RoleId");

    if (email == null || ((role != 1)))
    {
        TempData["ErrorMessage"] = "You do not have permission to do this function";
        Response.Redirect("/Error");
    }
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>NewsArticle</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsArticle.NewsTitle)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.NewsTitle)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsArticle.Headline)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.Headline)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsArticle.CreatedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.CreatedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsArticle.NewsContent)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.NewsContent)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsArticle.NewsSource)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.NewsSource)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsArticle.NewsStatus)
        </dt>
        <dd class="col-sm-10">
            @(Model.NewsArticle.NewsStatus == true ? "Active" : "Inactive")
        </dd>
        <!-- Đã loại bỏ field UpdatedById -->
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsArticle.ModifiedDate)
        </dt>
        <dd class="col-sm-10">
            @(Model.NewsArticle.ModifiedDate != null ? Html.DisplayFor(model => model.NewsArticle.ModifiedDate) : "N/A")
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsArticle.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.Category.CategoryName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsArticle.CreatedBy)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.CreatedBy.AccountName)
        </dd>
        <!-- Thêm field mới để hiển thị Tags -->
        <dt class="col-sm-2">
            Tags
        </dt>
        <dd class="col-sm-10">
            @if (Model.NewsArticle.Tags != null && Model.NewsArticle.Tags.Any())
            {
                <div class="d-flex flex-wrap">
                    @foreach (var tag in Model.NewsArticle.Tags)
                    {
                        <span class="badge bg-info text-dark me-2 mb-2">@tag.TagName</span>
                    }
                </div>
            }
            else
            {
                <span>No tags available</span>
            }
        </dd>
    </dl>
    
    <form method="post">
        <input type="hidden" asp-for="NewsArticle.NewsArticleId" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-page="./Index">Back to List</a>
    </form>
</div>
